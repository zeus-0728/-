#顺序查找(从表中指定位置，一般为最后一个，第零个位置设为岗哨，沿某个方向将记录的关键词与定值进行比较来查找)
int srqsearch(DataType R[],KeyType key){
R[0].key=key,i=n;
while(R[i].key!=key)
  i=i-1;
  return i;
}

#折半查找（在有序表里，通过对查找的数值与表的中值进行比较，缩小二分之一的查找范围，并将这个过程放入循环里）
low指示查找区间的下界，high指示查找区间的上界，mid=（low+high）/2，-1一进就可以了
查找失败的条件low>high
int BinarySearch(DataType SL[],KeyType key,int n){
int low=1;
int high=n;
while(low<=high)
{
  mid=(low+high)/2;
  if(key==SL[mid].key){return mid;}
  else if(key>SL[mid].key)low=mid+1;
    else high = mid-1;
}
  return 0;
}

#索引查找(快速定位查找范围，适用于数据量巨大且无序,先分块使其块间有序，快速定位到块)
索引(最大关键值)项，位置(指针)项
索引表的查找可以用顺序或折半查找,需另设一个块
int IndexSequelSearch(IndexType ls[],DataType s[],int m,KeyType key)
{
  i=0;
  while(i<m&&key>ls[i].key)i++;/*块间查找*/
  if(i==m)return -1;//查找失败
  else//在块内顺序查找
  {
    j=ls[i].link;
    while(Key!=s[j].key&&j<ls[i+1].link)j++;
    if(key==s[j].key)return j;//查找成功
    else return -1;//查找失败
  }
  
}

